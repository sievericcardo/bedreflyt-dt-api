class TaskModel extends BaseModel ()

    override Unit adaptAddition()
        List<Task> newTasks = construct("
        PREFIX : <http://www.smolang.org/bedreflyt/>

        SELECT DISTINCT ?taskName
        WHERE {
            ?task a :Task ;
                :taskName ?taskName .
        }");

        if newTasks != null then
            print("RECONFIG> Adding new tasks...");

            while newTasks != null do
                Task newTask = newTasks.content;
                List<Task> lx = newTasks;
                
                print("RECONFIG> Adding task " ++ newTask.taskName);
                destroy(lx);
            end

            print("RECONFIG> New tasks added");
        end    
    end

    override Unit adaptRemoval()
        List<Task> wrongTasks = access("
        PREFIX : <http://www.smolang.org/bedreflyt/>

        SELCT DISTINCT ?obj {
            ?obj a prog:Task ;
                prog:Task_taskName ?taskName .
            FILTER NOT EXISTS {
                ?task a :Task ;
                    :taskName ?taskName .
            }
        }");

        if wrongTasks != null then
            print("RECONFIG> Removing wrong tasks...");

            while wrongTasks != null do
                Task wrongTask = wrongTasks.content;
                List<Task> lx = wrongTasks;
                
                print("RECONFIG> Removing task " ++ wrongTask.taskName);
                destroy(wrongTask);
                destroy(lx);
            end

            destroy(wrongTasks);
            print("RECONFIG> Wrong tasks removed");
    end

    override Unit adaptDefect()
        print("RECONFIG> Checking for defects in the Task(s)");
        skip;
        print("RECONFIG> Defects checked for the Task(s)");
    end
end
