class FloorModel extends BaseModel ()
    override Unit adaptAddition()
        List<Floor> newFloors = construct("
        PREFIX : <http://www.smolang.org/bedreflyt/>

        SELECT DISTINCT ?floorNumber
        WHERE {
            ?floor a :Floor ;
                :floorNumber ?floorNumber .
        }");

        if newFloors != null then
            print("RECONFIG> Adding new floors...");

            while newFloors != null do
                Floor newFloor = newFloors.content;
                List<Floor> lx = newFloors;
                
                print("RECONFIG> Adding floor " ++ newFloor.floorNumber);
                destroy(lx);
            end

            print("RECONFIG> New floors added");
        end
    end

    override Unit adaptRemoval()
        List<Floor> wrongFloors = access("
        PREFIX : <http://www.smolang.org/bedreflyt/>

        SELCT DISTINCT ?obj {
            ?obj a prog:Floor ;
                prog:Floor_floorNumber ?floorNumber .
            FILTER NOT EXISTS {
                ?floor a :Floor ;
                    :floorNumber ?floorNumber .
            }
        }");

        if wrongFloors != null then
            print("RECONFIG> Removing wrong floors...");

            while wrongFloors != null do
                Floor wrongFloor = wrongFloors.content;
                List<Floor> lx = wrongFloors;
                
                print("RECONFIG> Removing floor " ++ wrongFloor.floorNumber);
                destroy(wrongFloor);
                destroy(lx);
            end

            destroy(wrongFloors);
            print("RECONFIG> Wrong floors removed");
        end
    end

    override Unit adaptDefect()
        skip;
    end
end