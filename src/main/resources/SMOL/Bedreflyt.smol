abstract class BaseModel (String name)
    Unit adaptModel()
        print("RECONFIG> Reconfiguring " ++ this.name);
        this.adaptDefect();
        this.adaptAddition();
        this.adaptRemoval();
    end

    abstract Unit adaptAddition()
    abstract Unit adaptRemoval()
    abstract Unit adaptDefect()
end

class AssetModel extends Twin (List<BaseModel> mods)
    Unit register (BaseModel m)
        this.mods = new List<BaseModel>(m, this.mods);
    end

    Unit reconfigure()
        print("RECONFIG> Reconfiguring the asset model...");

        List<BaseModel> ms = this.mods;
        while ms != null do
            ms.content.adaptModel();
            ms = ms.next;
        end

        print("RECONFIG> Asset model reconfigured");
    end

    Unit reconfigureSingleModel(String mod)
        print("RECONFIG> Reconfiguring the asset model...");

        List<BaseModel> ms = this.mods;
        while ms != null do
            if ms.content.name == mod then
                print("RECONFIG> Reconfiguring " ++ ms.content.name);
                ms.content.adaptModel();
            end
            ms = ms.next;
        end

        print("RECONFIG> Reconfiguring DONE...");
    end
end

main
    AssetModel assetModel = new AssetModel(null);

    DiagnosisModel m1 = new DiagnosisModel("diagnosis");
    RoomCategoryModel m2 = new RoomCategoryModel("rooms");
    RoomModel m3 = new RoomModel("room distributions");
    TaskModel m4 = new TaskModel("tasks");
    TaskDependencyModel m5 = new TaskDependencyModel("task dependencies");
    TreatmentModel m6 = new TreatmentModel("treatments");

    assetModel.register(m1);
    assetModel.register(m2);
    assetModel.register(m3);
    assetModel.register(m4);
    assetModel.register(m5);
    assetModel.register(m6);

    assetModel.reconfigure();

    breakpoint;
end
