abstract class Twin() end

class Diagnosis extends Twin (
    String diagnosisCode,
    String diagnosisName
)
end

class Task extends Twin (
    String taskName,
    Room physicalLocation
)
    Room getPhysicalLocation()
        Room roomContent = access("
        PREFIX : <http://www.smolang.org/bedreflyt/>

        SELECT DISTINCT ?obj
        WHERE {
            ?task a :Step ;
                :taskName %1 .
            ?task :isLocatedIn ?room .
            ?room :roomNumber ?number .

            ?obj a prog:Room ;
                prog:Room_roomNumber ?number .
        ", this.taskName);

        Room room = roomContent.content;
        return room;
    end
end

class TreatmentStep extends Twin (
    String treatmentName,
    Task task,
    TreatmentStep previousTask,
    TreatmentStep nextTask,
    MonitoringCategory monitoringCategory,
    Double staffLoad,
    Double averageDuration
)
    Task getTask()
        Task taskContent = access("
        PREFIX : <http://www.smolang.org/bedreflyt/>

        SELECT DISTINCT ?obj
        WHERE {
            ?treatment a :Procedure ;
                :procedureName %1 .
            ?treatment :hasTask ?task .
            ?task :taskName %2 .

            ?obj a prog:Task ;
                prog:Task_taskName ?name .
        ", this.treatment.treatmentName, this.taskName);

        Task task = taskContent.content;
        return task;
    end

    TreatmentStep getPreviousTask()
        TreatmentStep previousTaskContent = access("
        PREFIX : <http://www.smolang.org/bedreflyt/>

        SELECT DISTINCT ?obj
        WHERE {
            ?treatment a :Procedure ;
                :procedureName %1 .
            ?treatment :hasTask ?task .
            ?task :taskName %2 .
            ?task :hasPreviousTask ?previousTask .
            ?previousTask :hasTask ?prevTask .
            ?prevTask :taskName ?name .

            ?obj a prog:Task ;
                prog:Task_taskName ?treatTask .
            ?treatTask a prog:Task ;
                prog:Task_taskName ?name .
        ", this.treatment.treatmentName, this.taskName);

        Task previousTask = previousTaskContent.content;
        return previousTask;
    end

    TreatmentStep getNextTask()
        TreatmentStep nextTaskContent = access("
        PREFIX : <http://www.smolang.org/bedreflyt/>

        SELECT DISTINCT ?obj
        WHERE {
            ?treatment a :Procedure ;
                :procedureName %1 .
            ?treatment :hasTask ?task .
            ?task :taskName %2 .
            ?task :hasNextTask ?nextTask .
            ?nextTask :hasTask ?nextTsk .
            ?nextTsk :taskName ?name .

            ?obj a prog:Task ;
                prog:Task_taskName ?treatTask .
            ?treatTask a prog:Task ;
                prog:Task_taskName ?name .
        ", this.treatment.treatmentName, this.taskName);

        Task nextTask = nextTaskContent.content;
        return nextTask;
    end
end

class Treatment extends Twin (
    String treatmentName,
    String treatmentDescription,
    Diagnosis diagnosis,
    Double frequency,
    Double weight,
    TreatmentStep firstTask,
    TreatmentStep lastTask
)
    Diagnosis getDiagnosis()
        Diagnosis diagnosisContent = access("
        PREFIX : <http://www.smolang.org/bedreflyt/>

        SELECT DISTINCT ?obj
        WHERE {
            ?treatment a :Procedure ;
                :procedureName %1 .
            ?treatment :isTreatmentProcOf ?diagnosis .
            ?diagnosis :diagnosisName ?name .

            ?obj a prog:Diagnosis ;
                prog:Diagnosis_diagnosisName ?name .
        ", this.treatmentName, this.diagnosis.diagnosisCode);

        Diagnosis diagnosis = diagnosisContent.content;
        return diagnosis;
    end

    TreatmentStep getFirstTask()
        TreatmentStep firstTaskContent = access("
        PREFIX : <http://www.smolang.org/bedreflyt/>

        SELECT DISTINCT ?obj
        WHERE {
            ?treatment a :Procedure ;
                :procedureName %1 .
            ?treatment :hasFirstStep ?firstTask .
            ?firstTask :hasTask ?task .
            ?task :taskName ?name .

            ?obj a prog:Task ;
                prog:Task_taskName ?treatTask .
            ?treatTask a prog:Task ;
                prog:Task_taskName ?name .
        ", this.treatmentName);

        Task firstTask = firstTaskContent.content;
        return firstTask;
    end

    TreatmentStep getLastTask()
        TreatmentStep lastTaskContent = access("
        PREFIX : <http://www.smolang.org/bedreflyt/>

        SELECT DISTINCT ?obj
        WHERE {
            ?treatment a :Procedure ;
                :procedureName %1 .
            ?treatment :hasLastStep ?lastTask .
            ?lastTask :hasTask ?task .
            ?task :taskName ?name .

            ?obj a prog:Task ;
                prog:Task_taskName ?treatTask .
            ?treatTask a prog:Task ;
                prog:Task_taskName ?name .
        ", this.treatmentName);

        Task lastTask = lastTaskContent.content;
        return lastTask;
    end
end

class MonitoringCategory extends Twin (
    String description,
    Int category
)
end

class City extends Twin (String cityName)
end

class Hospital extends Twin (
    String hospitalName,
    String hospitalCode,
    City hospitalCity
)
    City getHospitalCity()
        City cityContent = access("
        PREFIX : <http://www.smolang.org/bedreflyt/>

        SELECT DISTINCT ?obj
        WHERE {
            ?hospital a :Hospital ;
                :hosptialName %1 ;
                :hospitalCode %2 .
            ?hospital :hasCity ?city .
            ?city :cityName ?name .

            ?obj a prog:City ;
                prog:City_cityName ?name .
        ", this.hospitalName, this.hospitalCode);

        City hospitalCity = cityContent.content;
        return hospitalCity;
    end
end

class Floor extends Twin (
    Int floorNumber
)
end

class Ward extends Twin (
    String wardName,
    String wardCode,
    Hospital wardHospital,
    Floor wardFloor
)
    Hospital getWardHospital()
        Hospital hospitalContent = access("
        PREFIX : <http://www.smolang.org/bedreflyt/>

        SELECT DISTINCT ?obj
        WHERE {
            ?ward a :Ward ;
                :wardName %1 ;
                :wardCode %2 .
            ?ward :hasHospital ?hospital .
            ?hospital :hospitalName ?name .

            ?obj a prog:Hospital ;
                prog:Hospital_hospitalName ?name .
        ", this.wardName, this.wardCode);

        Hospital wardHospital = hospitalContent.content;
        return wardHospital;
    end

    Floor getWardFloor()
        Floor floorContent = access("
        PREFIX : <http://www.smolang.org/bedreflyt/>

        SELECT DISTINCT ?obj
        WHERE {
            ?ward a :Ward ;
                :wardName %1 ;
                :wardCode %2 .
            ?ward :hasFloor ?floor .
            ?floor :floorNumber ?number .

            ?obj a prog:Floor ;
                prog:Floor_floorNumber ?number .
        ", this.wardName, this.wardCode);

        Floor wardFloor = floorContent.content;
        return wardFloor;
    end
end

class Room extends Twin (
    Int roomNumber,
    Int capacity
)
end

class Bathroom extends Room ()
end

class TreatingRoom extends Room (
    Ward treatingWard,
    Hospital hospital,
    Bathroom bathroom,
    MonitoringCategory monitoringCategory
)
    Bathroom getBathroom()
        Bathroom bathroomContent = access("
        PREFIX : <http://www.smolang.org/bedreflyt/>

        SELECT DISTINCT ?obj
        WHERE {
            ?treatingRoom a :TreatingRoom ;
                :roomNumber %1 ;
                :roomCapacity %2 .
            ?treatingRoom :hasBathroom ?bathroom .
            ?bathroom :roomNumber ?number .

            ?obj a prog:Bathroom ;
                prog:Bathroom_roomNumber ?number .
        ", this.roomNumber, this.capacity);

        Bathroom bathroom = bathroomContent.content;
        return bathroom;
    end
end

class Bed extends Twin (
    Int bedNumber,
    TreatingRoom bedTreatingRoom,
    MonitoringCategory monitoringCategory
)
    TreatingRoom getBedTreatingRoom()
        TreatingRoom treatingRoomContent = access("
        PREFIX : <http://www.smolang.org/bedreflyt/>

        SELECT DISTINCT ?obj
        WHERE {
            ?bed a :Bed ;
                :bedNumber %1 .
            ?bed :isAssignRoom ?room .
            ?room :roomNumber %2 .
            ?room :roomCapacity %3 .

            ?obj a prog:TreatingRoom ;
                prog:TreatingRoom_roomNumber %2 ;
                prog:TreatingRoom_roomCapacity %3 .
        ", this.bedNumber, this.bedTreatingRoom.roomNumber, this.bedTreatingRoom.capacity);

        TreatingRoom treatingRoom = treatingRoomContent.content;
        return treatingRoom;
    end

    MonitoringCategory getMonitoringCategory()
        MonitoringCategory monitoringCategoryContent = access("
        PREFIX : <http://www.smolang.org/bedreflyt/>

        SELECT DISTINCT ?obj
        WHERE {
            ?bed a :Bed ;
                :bedNumber %1 .
            ?bed :hasMonitoringStatus ?monitoringCategory .
            ?monitoringCategory :hasMonitoringCode ?code .

            ?obj a prog:MonitoringCategory ;
                prog:MonitoringCategory_category ?code .
        ", this.bedNumber);

        MonitoringCategory monitoringCategory = monitoringCategoryContent.content;
        return monitoringCategory;
    end
end

// Task defects
class TaskDefectBed extends Twin (Task obj, Int bedNew) end
class TaskDefectName extends Twin (Task obj, String taskNameNew) end
class TaskDefectDuration extends Twin (Task obj, Double durationAverageNew) end

// Task dependency defects
class TaskDependencyDefectDependency extends Twin (
    TaskDependency obj,
    String taskDependencyNew) 
end

// Treatments defects
class TreatmentDefectFrequency extends Twin (
    Treatment obj,
    Double frequencyNew)
end
class TreatmentDefectWeight extends Twin (
    Treatment obj,
    Double weightNew)
end

// Room category defects
class RoomDefectBedCategory extends Twin (RoomCategory obj, Int bedCategoryNew) end
class RoomDefectDescription extends Twin (RoomCategory obj, String roomDescriptionNew) end

// Room defects
class RoomDefectRoomNumberModel extends Twin (
    Room obj,
    Int roomNumberModelNew)
end
class RoomDefectRoomCategory extends Twin (
    Room obj,
    Int roomNew)
end
class RoomDefectCapacity extends Twin (
    Room obj,
    Int capacityNew)
end
class RoomDefectBathroom extends Twin (
    Room obj,
    Int bathroomNew)
end
